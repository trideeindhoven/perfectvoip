- name: PerfectVoIP FusionPBX server
  hosts: localhost
  gather_facts: yes
  tasks:
#  - ansible.builtin.debug:
#     msg: "!!!!!!!!!!!Playbook can only run under Debian 11!!!!!!!!!!"
#     when:
#     -  ansible_distribution != 'Debian'
  - include_vars: vars.yaml
  - meta: end_play
    when:
    -  ansible_distribution != 'Debian'

  - name: Export MAKEFLAGS
    shell: export MAKEFLAGS='-j '$((`nproc`+1))
    become: true
  - name: Export MAKEFLAGS
    shell: export MAKEFLAGS='-j '$((`nproc`+1))

  - name: Ansible Update Cache and Upgrade all Packages
    register: updatesys
    become: true
    apt:
      name: "*"
      state: latest
      update_cache: yes
  - name: apt install packages
    become: true
    apt:
      name: 
        - wget
        - sngrep
        - htop
      state: present
  - name: Download pre-install.sh
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/fusionpbx/fusionpbx-install.sh/master/debian/pre-install.sh
      dest: /tmp/pre-install.sh
      mode: '0755'

  - name: Pre installation tasks FusionPBX
    shell: /tmp/pre-install.sh
    become: true

  - name: Test if FusionPBX config exists
    stat:
      path: /etc/fusionpbx/config.conf
    register: fusionpbx_config

  - name: Enable some modules
    become: true
    ansible.builtin.blockinfile:
      path: /usr/src/fusionpbx-install.sh/debian/resources/switch/source-release.sh
      block: "sed -i /usr/src/freeswitch/modules.conf -e s:'#say/mod_say_nl:say/mod_say_nl:'\nsed -i /usr/src/freeswitch/modules.conf -e s:'#applications/mod_translate:applications/mod_translate:'"
      insertbefore: '# prepare the build'
      marker: "#### {mark} ANSIBLE MANAGED BLOCK ####"
      marker_begin: "START PerfectVoIP MODULES"
      marker_end: "END PerfectVoIP MODULES"

  - name: Install FusionPBX
    shell: /usr/src/fusionpbx-install.sh/debian/install.sh
    become: true
    when: not fusionpbx_config.stat.exists
    register: fusionpbx_install_content

  - ansible.builtin.debug:
     var: fusionpbx_install_content.stdout_lines

  - set_fact:
      web_password: "{{ fusionpbx_install_content.stdout | regex_search(regexp,'\\1') | first }}"
    vars:
      regexp: '\s+password: ([a-zA-Z0-9]+)'

  - ansible.builtin.debug:
     var: web_password

  - name: Write web password to file
    become: true
    ansible.builtin.lineinfile:
      path: /root/fusionpbx_password.txt
      create: true
      owner: root
      mode: 600
#      regexp: '<load module="{{ item }}"/>'
      line: '{{ web_password }}'

  - name: Ensure blf_subscribe.lua is enabled at startup
    become: true
    replace:
      path: /etc/freeswitch/autoload_configs/lua.conf.xml
      regexp: '^(\s*)<!\-\-(<param name="startup\-script" value="blf_subscribe.lua flow"/>)'
      replace: '\1\2'

  - name: Ensure mwi_subscribe.lua is enabled at startup
    become: true
    replace:
      path: /etc/freeswitch/autoload_configs/lua.conf.xml
      regexp: '^(\s*)<!\-\-(<param name="startup\-script" value="app/voicemail/resources/scripts/mwi_subscribe.lua"/>)'
      replace: '\1\2'

  - name: Download custom scripts
    become: true
    get_url:
      url: "https://raw.githubusercontent.com/trideeindhoven/perfectvoip/master/fusionpbx/scripts/{{ item }}"
      dest: /usr/share/freeswitch/scripts
    with_items:
      - jeroen.lua
      - schedule_call_flow2.lua
      - slaxdom.lua
      - slaxml.lua

  - name: "Timeconditions callflow cron"
    become: true
    ansible.builtin.cron:
      name: "test"
      state: present
      minute: "0"
      hour: "1"
      day: "*"
      month: "*"
      weekday: "*"
      job: "/usr/bin/fs_cli -x 'lua schedule_call_flow2.lua'"


#  - name: Install mod_translate
#    become: true
#    make:
#      chdir: /usr/src/freeswitch/src/mod/applications/mod_translate
#      target: install

#Vervolgens toevoegen in: /etc/freeswitch/autoload_configs/modules.conf.xml
#Herstarten: systemctl restart freeswitch
#Vervolgens activeren in de gui: advanced-modules

#  - name: Install mod_say_nl
#    become: true
#    make:
#      chdir: /usr/src/freeswitch/src/mod/say/mod_say_nl
#      target: install

#  - name: Modules are enabled in modules.conf.xml
#    become: true
#    ansible.builtin.lineinfile:
#      path: /etc/freeswitch/autoload_configs/modules.conf.xml
#      regexp: '<load module="{{ item }}"/>'
#      line: '                <load module="{{ item }}"/>'
#    with_items:
#      - mod_translate
#      - mod_say_nl

  - name: Enable Dutch language
    become: true
    ansible.builtin.lineinfile:
      path: /etc/freeswitch/freeswitch.xml
      regexp: '<X\-PRE\-PROCESS cmd="include" data="languages/nl/*.xml"/>'
      line: '    <X-PRE-PROCESS cmd="include" data="languages/nl/*.xml"/>'
      insertafter: '<section name="languages" description="Language Management">'
#Herstarten: systemctl restart freeswitch
#Vervolgens controleren in de gui: Advancedâ†’Modules of de module inderdaad actief is

  - name: Clone freeswitch_nl repo
    git:
      repo: "https://github.com/trideeindhoven/freeswitch_nl.git"
      dest: ~/freeswitch_nl/
      clone: yes
      update: yes

  - name: Copy config.py.example to config.py
    ansible.builtin.copy:
      src: ~/freeswitch_nl/config.py.example
      dest: ~/freeswitch_nl/config.py

  - name: Set the google API key
    replace:
      path: ~/freeswitch_nl/config.py
      regexp: 'xyzabc123'
      replace: '{{google_api_key}}'

  - name: Generate the audiofiles
    chdir: '~/freeswitch_nl'
    shell: '~/freeswitch_nl/freeswitch_nl_translations.py -n'

  - name: Audiofiles to FreeSwitch location
    become: true
    ansible.builtin.copy:
      src: ~/freeswitch_nl/google/nl
      dest: /usr/share/freeswitch/sounds

  - name: FusionPPX config
    shell:
      cmd: cat /etc/fusionpbx/config.conf
    register: fusionpbx_config_content

  - name: Getting Fusionpbx database name
    set_fact: 
      db_name:     "{{ fusionpbx_config_content.stdout | regex_search('database.0.name\\s?=\\s?(.+)', '\\1') | first}}"
  - name: Getting Fusionpbx database host
    set_fact: 
      db_host:     "{{ fusionpbx_config_content.stdout | regex_search('database.0.host\\s?=\\s?(.+)', '\\1') | first}}"
  - name: Getting Fusionpbx database user
    set_fact: 
      db_user:     "{{ fusionpbx_config_content.stdout | regex_search('database.0.username\\s?=\\s?(.+)', '\\1') | first}}"
  - name: Getting Fusionpbx database password
    set_fact: 
      db_password: "{{ fusionpbx_config_content.stdout | regex_search('database.0.password\\s?=\\s?(.+)', '\\1') | first}}"

  - name: "Update tables with correct data"
    become: true
    shell: psql postgresql://{{db_user}}:{{db_password}}@{{db_host}}/{{db_name}} < ./sql/updates.sql

  - name: "Insert data into tables"
    become: true
    shell: psql postgresql://{{db_user}}:{{db_password}}@{{db_host}}/{{db_name}} < ./sql/inserts.sql

  - name: Enable TLS version logging
    become: true
    ansible.builtin.blockinfile:
      path: /etc/nginx/sites-enabled/fusionpbx
      block: "log_format combined_ssl '$remote_addr - $remote_user [$time_local] '\n                        '\"$request\" $status $body_bytes_sent '\n                        '\"$http_referer\" \"$http_user_agent\" '\n                        '$ssl_protocol/$ssl_cipher';"
      insertbefore: 'server {'
      marker: "#### {mark} ANSIBLE MANAGED BLOCK ####"
      marker_begin: "START TLS LOGGING"
      marker_end: "END TLS LOGGING"

  - name: Enable TLS logging for NGINX so that we can see if some TLS protocols can be disabled
    become: true
    replace:
      path: /etc/nginx/sites-enabled/fusionpbx
      after: 'listen 443 ssl;'
      regexp: '^(\s*access_log /var/log/nginx/access\.log);'
      replace: '\1 combined_ssl;'

  - name: Change open ports in firewall
    become: true
    replace:
      path: /etc/iptables/rules.v4
      regexp: '5060:5091'
      replace: '5080:5091'

  - name: restart services
    become: true
    ansible.builtin.service:
      name: '{{ item }}'
      state: restarted
      enabled: true
    with_items:
      - freeswitch
      - nginx
      - iptables

#cd freeswitch_nl/
#cp config.py.example config.py
#nano config.py
#./freeswitch_nl_translations.py 
#mv google/nl /usr/share/freeswitch/sounds

#default_country=NL


